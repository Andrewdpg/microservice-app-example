services:
  # Jenkins
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8079:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - microservices

  # Redis para cola de logs
  redis-queue:
    image: redis:7-alpine
    container_name: redis-queue
    ports:
      - "6379:6379"
    volumes:
      - redis_queue_data:/data
    networks:
      - microservices

  # Redis para cach√©
  redis-cache:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6380:6379"
    volumes:
      - redis_cache_data:/data
    networks:
      - microservices

  # Auth API
  auth-api:
    build: ./auth-api
    container_name: auth-api
    ports:
      - "8081:8081"
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
    depends_on:
      - users-api
    networks:
      - microservices

  # Users API
  users-api:
    build: ./users-api
    container_name: users-api
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
    depends_on:
      - redis-cache
    networks:
      - microservices

  # TODOs API
  todos-api:
    build: ./todos-api
    container_name: todos-api
    ports:
      - "8082:8082"
    environment:
      - TODO_API_PORT=8082
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
      - USERS_API_ADDRESS=http://users-api:8083
    depends_on:
      - redis-queue
      - users-api
    networks:
      - microservices

  # Log Message Processor
  log-processor:
    build: ./log-message-processor
    container_name: log-processor
    environment:
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis-queue
    networks:
      - microservices

  # Frontend
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "8080:8080"
    environment:
      - AUTH_API_URL=http://auth-api:8081
      - TODOS_API_URL=http://todos-api:8082
    depends_on:
      - auth-api
      - todos-api
    networks:
      - microservices

volumes:
  jenkins_home:
  redis_queue_data:
  redis_cache_data:

networks:
  microservices:
    driver: bridge